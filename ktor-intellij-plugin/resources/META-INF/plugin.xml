<idea-plugin url="https://ktor.io" allow-bundled-update="true">
    <idea-version since-build="183"/>
    <id>io.ktor.intellij.plugin</id>

    <name>Ktor</name>
    <version>1.4.1</version>
    <vendor url="https://www.jetbrains.com">JetBrains</vendor>
    <description>
        <![CDATA[
            This plugin supports the <a href="https://ktor.io/">Ktor</a> framework.

            <strong>Note: It doesn't work on Android Studio.</strong>

            The following features are available:
            <ul>
                <li>Ability to create preconfigured Ktor projects with optional Swagger/OpenAPI support.</li>
            </ul>

            <h2>Changelog</h2>

            <h3>1.3.2</h3>
            <ul>
                <li>Ktor 1.3.2</li>
                <li>Ktor locations inspections and intentions</li>
            </ul>

            <h3>1.2.3</h3>
            <ul>
                <li>Ktor 1.2.3</li>
            </ul>

            <h3>1.2.2</h3>
            <ul>
                <li>Ktor 1.2.2</li>
                <li>Bugfixes for mock engine feature generation</li>
                <li>Added Mustache and Thymeleaf generation</li>
            </ul>

            <h3>1.2.0</h3>
            <ul>
                <li>Ktor 1.2.0</li>
                <li>Minor cosmetic fixes</li>
            </ul>

            <h3>1.1.4</h3>
            <ul>
                <li>Ktor 1.1.4.</li>
            </ul>

            <h3>1.1.3</h3>
            <ul>
                <li>Ktor 1.1.3.</li>
                <li>Removed old ktor versions.</li>
            </ul>

            <h3>1.1.2</h3>
            <ul>
                <li>Ktor 1.1.2.</li>
            </ul>

            <h3>1.1.1</h3>
            <ul>
                <li>Ktor 1.1.1.</li>
            </ul>

            <h3>1.0.1</h2>
            <ul>
                <li>Ktor 1.0.1 support.</li>
                <li>Fixed missing SwaggerUtils.kt</li>
                <li>Fixed CachingHeaders imports</li>
            </ul>
            <h3>1.0.0</h2>
            <ul>
                <li>Ktor 1.0.0 support.</li>
            </ul>
            <h3>0.3.4</h2>
            <ul>
                <li>Ktor 1.0.0-beta-3 support (with Kotlin 1.3 and kotlinx.coroutines 1.0.0).</li>
                <li>Fixed resources folder with Gradle Kotlin DSL.</li>
                <li>Fixed executable permissions on generated project IntelliJ plugin.</li>
            </ul>
            <h3>0.3.3</h2>
            <ul>
                <li>Ktor 1.0.0-beta-2 support.</li>
            </ul>
            <h3>0.3.2</h2>
            <ul>
                <li>Ktor 1.0.0-alpha-3 support.</li>
            </ul>
            <h3>0.3.1</h2>
            <ul>
                <li>Ktor 1.0.0-alpha-2 support.</li>
            </ul>
            <h3>0.3.0</h2>
            <ul>
                <li>Code Style improvements.</li>
                <li>Experimental alternative swagger generation.</li>
                <li>Gradle Kotlin-DSL generation support.</li>
                <li>Internal refactorings.</li>
            </ul>
            <h3>0.2.3</h2>
            <ul>
                <li>Ktor: 0.9.5.</li>
                <li>Initial test generation for some features.</li>
            </ul>
            <h3>0.2.2</h2>
            <ul>
                <li>Ktor: 0.9.4.</li>
                <li>Added support for Webjars feature.</li>
                <li>Swagger: Initial experimental test generation.</li>
            </ul>
            <h3>0.2.1</h2>
            <ul>
                <li>Swagger: HTTP API generation (`api.http`) for documentation, and testing the API using IU.</li>
                <li>Swagger: YAML support.</li>
                <li>Swagger: JWT login code generation using heuristics.</li>
                <li>Swagger: Fixed multiline comments in several places.</li>
                <li>Swagger: Generated unnamed types.</li>
                <li>Swagger: Improved OpenAPI 3.0 support (still requires some work).</li>
            </ul>
            <h3>0.2.0</h2>
            <ul>
                <li>Fixed plugin on windows (no src folder was generated).</li>
                <li>Generate files with spaces instead of tabs.</li>
                <li>Additional templates.</li>
                <li>Swagger: Support Swagger/OpenAPI models from 2.0.0 (beta) to 3.0.0 (pre-alpha, not fully working yet).</li>
                <li>Swagger: Support JWT authentication with Swagger.</li>
                <li>Swagger: Generate Swagger client using JVM HttpClient.</li>
            </ul>
            <h3>0.1.0</h2>
            <ul>
                <li>Added experimental Swagger Server Code generation.</li>
                <li>Generate <code>logback.xml</code> file.</li>
                <li>Fixed zip folder permissions.</li>
                <li>Fix maven missing property.</li>
            </ul>
            <h3>0.0.5</h2>
            <ul>
                <li>Make compatible with EAP builds.</li>
                <li>Added SessionsFeature sample code.</li>
                <li>Some template adjustments.</li>
            </ul>
            <h3>0.0.4</h2>
            <ul>
                <li>Some template adjustments.</li>
                <li>Generate .gitignore file.</li>
                <li>Updated Kotlin to 1.2.51.</li>
            </ul>
            <h3>0.0.3</h2>
            <ul>
                <li>Adjustments for Darkula theme.</li>
                <li>Updated Ktor to 0.9.3.</li>
            </ul>
            <h3>0.0.2</h2>
            <ul>
                <li>Redesigned Wizard.</li>
                <li>Split features into server and client.</li>
                <li>Group features in categories.</li>
                <li>Description, artifact, and documentation about features.</li>
                <li>Display transitive dependencies between features.</li>
                <li>Additional samples for some features.</li>
            </ul>

            <h3>0.0.1</h2>
            <ul>
                <li>First public version.</li>
            </ul>
        ]]>
    </description>

    <depends>org.jetbrains.idea.maven</depends>
    <depends>org.jetbrains.kotlin</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.externalSystem</depends>

    <!-- we can't depend on Gradle -->
    <!-- but it works well since we actually never invoke any gradle-related stuff directly -->
    <!-- and query for the service instead -->

    <!-- once we drop 2018.3 support, we'll uncomment this -->

    <!-- this is not supported on IDEA 2018.3 -->
<!--    <depends>com.intellij.gradle</depends>-->

    <!-- this is not supported on IDEA 2019+ -->
<!--    <depends>org.jetbrains.plugins.gradle</depends>-->

    <extensions defaultExtensionNs="com.intellij">
        <moduleBuilder builderClass="io.ktor.start.intellij.KtorModuleBuilder" />

        <languageInjector implementation="io.ktor.start.intellij.locations.PatternInjector"/>
        <lang.parserDefinition implementationClass="io.ktor.start.intellij.locations.PatternParserDefinition"
                               language="Kotlin.ktor.locations.pattern"
                               id="Kotlin.ktor.locations.pattern.id"
        />

        <!-- including both seems to be fine, the factory is deprecated and required for IDEA 2018.3 -->
<!--         non dynamic -->
        <fileTypeFactory implementation="io.ktor.start.intellij.locations.PatternFileTypeFactory" />

        <fileType name="ktor locations pattern"
                  language="Kotlin.ktor.locations.pattern"
                  implementationClass="io.ktor.start.intellij.locations.PatternFileType" />

        <lang.braceMatcher language="Kotlin.ktor.locations.pattern"
                           implementationClass="io.ktor.start.intellij.locations.LocationPatternBraceMatcher"/>

        <!-- non dynamic -->
        <lang.findUsagesProvider language="Kotlin.ktor.locations.pattern"
                                 implementationClass="io.ktor.start.intellij.locations.PatternFindUsagesProvider"/>

        <!-- non dynamic -->
        <findUsagesHandlerFactory
                implementation="io.ktor.start.intellij.locations.LocationsParametersFindUsagesHandlerFactory"/>

        <localInspection language="Kotlin.ktor.locations.pattern"
                         implementationClass="io.ktor.start.intellij.locations.ParameterNameInspection"
                         displayName="Location path pattern parameter names validation."
                         groupName="Ktor"
                         enabledByDefault="true"
                         level="ERROR"
        />

        <localInspection language="kotlin"
                         implementationClass="io.ktor.start.intellij.locations.MissingOwnerClassReferenceInspection"
                         displayName="Location path pattern parameter names validation."
                         groupName="Ktor"
                         enabledByDefault="true"
        />

        <lang.syntaxHighlighterFactory language="Kotlin.ktor.locations.pattern"
                                       implementationClass="io.ktor.start.intellij.locations.PatternSyntaxHighlighter$Companion"/>

        <annotator implementationClass="io.ktor.start.intellij.locations.ParameterNameAnnotator"
                   language="Kotlin.ktor.locations.pattern"/>

        <completion.contributor
                implementationClass="io.ktor.start.intellij.locations.PropertyNamesCompletionContributor"
                language="Kotlin.ktor.locations.pattern"
        />

        <psi.referenceContributor
                implementation="io.ktor.start.intellij.locations.LocationsReferenceContributor"/>

        <!-- non dynamic -->
        <definitionsScopedSearch implementation="io.ktor.start.intellij.locations.ParameterUsagesSearcher"/>

        <!-- non dynamic -->
        <referencesSearch implementation="io.ktor.start.intellij.locations.ParametersReferencesSearcher"/>

        <!-- non dynamic -->
        <lang.elementManipulator
                forClass="io.ktor.start.intellij.locations.LocationsPatternPsiElement.ParameterNameElement"
                implementationClass="io.ktor.start.intellij.locations.ManipulatorImpl"/>

        <lang.elementManipulator
            forClass="io.ktor.start.intellij.locations.LocationsPatternPsiElement.SubstitutionElement"
            implementationClass="io.ktor.start.intellij.locations.SubstitutionManipulatorImpl" />

        <renamePsiElementProcessor
                implementation="io.ktor.start.intellij.locations.ParameterRenameProcessor"/>

        <!-- non dynamic -->
        <lang.refactoringSupport
                language="Kotlin.ktor.locations.pattern"
                implementationClass="io.ktor.start.intellij.locations.LocationsRefactoringsSupportProvider"/>

        <!-- non dynamic -->
        <renameHandler implementation="io.ktor.start.intellij.locations.ParameterNameInPlaceRenameHandler"/>

        <!-- non dynamic -->
        <codeInsight.lineMarkerProvider
                implementationClass="io.ktor.start.intellij.locations.LocationsLineMarker"
                language="kotlin"/>

        <codeInsight.lineMarkerProvider
                implementationClass="io.ktor.start.intellij.RoutingLineMarker"
                language="kotlin"/>

    </extensions>
</idea-plugin>
